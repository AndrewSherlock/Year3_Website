<?php
/**
 * comment for file
 */

namespace App\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Used for when a user upvotes or downvotes a review
 * @ORM\Entity(repositoryClass="App\Repository\VoteRepository")
 * Class Vote
 * @package App\Entity
 */
class Vote
{
    /**
     * The id of the vote object
     * @ORM\Id
     * @ORM\GeneratedValue
     * @ORM\Column(type="integer")
     * @var int
     */
    private $id;

    /**
     * The value of the vote, either 1 or -1
    * @ORM\Column(type="integer")
     * @var int
     */
    private $voteType;

    /**
     * the user associated with the vote
     * @ORM\ManyToOne(targetEntity="App\Entity\User", inversedBy="votes")
     * @ORM\JoinColumn(nullable=true)
     * @var User
     */
    private $user;

    /**
     * the review that the vote is associated with
     * @ORM\ManyToOne(targetEntity="App\Entity\Review", inversedBy="votes")
     * @ORM\JoinColumn(nullable=true)
     * @var Review
     */
    private $review;

    /**
     * the id of the vote
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * the value of the vote
     * @return int
     */
    public function getVoteType()
    {
        return $this->voteType;
    }

    /**
     * sets the value of the vote
     * @param int $voteType
     */
    public function setVoteType($voteType): void
    {
        $this->voteType = $voteType;
    }

    /**
     * get the user who voted
     * @return User
     */
    public function getUser()
    {
        return $this->user;
    }

    /**
     * sets the User
     * @param User $user
     */
    public function setUser($user): void
    {
        $this->user = $user;
    }

    /**
     * sets the review for this vote
     * @return Review
     */
    public function getReview()
    {
        return $this->review;
    }

    /**
     * sets the review for this vote
     * @param Review $review
     */
    public function setReview($review): void
    {
        $this->review = $review;
    }


}

